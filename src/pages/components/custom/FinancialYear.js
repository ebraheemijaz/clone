import { Grid, Popover } from '@mui/material'
import React, { useState } from 'react'
import { useTheme } from '@mui/material/styles'

// ** MUI Imports
import Card from '@mui/material/Card'
import Chip from '@mui/material/Chip'
import Typography from '@mui/material/Typography'
import CardContent from '@mui/material/CardContent'

// ** Custom Component Import
import Icon from 'src/@core/components/icon'
import CustomChip from 'src/@core/components/mui/chip'
import CustomAvatar from 'src/@core/components/mui/avatar'
import { Box } from '@mui/system'

const data = [
  {
    avatarIcon: 'tabler:trending-up',
    title: 'Revenue (Mn. EUR)',
    subtitle: 'Increasing',
    chipColor: '#7367F0',
    stats: '193.1',
    avatarColor: 'primary',
    chipIcon: 'tabler:arrow-up',
    tooltipText: `Turnover is the total revenue generated by a company from its regular business activities within a specific period.`
  },
  {
    avatarIcon: 'tabler:trending-up',
    title: 'Employees',
    subtitle: 'Decreasing',
    chipColor: '#28C76F',
    stats: '1818',
    avatarColor: 'success',
    chipIcon: 'tabler:arrow-down',
    tooltipText: `Number of employees measures the total workforce within a company, reflecting its scale and capacity for operations and growth.`
  },
  {
    avatarIcon: 'tabler:trending-up',
    title: 'Return of Sales (ROS)',
    subtitle: 'Decreasing',
    chipColor: '#00CFE8',
    stats: '9.50%',
    avatarColor: 'info',
    chipIcon: 'tabler:arrow-down',
    tooltipText: `Return on Sales is a profitability ratio that shows the percentage of profits generated from net revenues.`
  },
  {
    avatarIcon: 'tabler:trending-up',
    title: 'Return of Assets (ROA)',
    subtitle: 'Increasing',
    chipColor: '#FF9F43',
    stats: '11.80%',
    avatarColor: 'warning',
    chipIcon: 'tabler:arrow-up',
    tooltipText: `Return on Assets evaluates a company's profitability relative to its total assets, indicating how efficiently assets generate earnings.`
  }
]

const TechCard = props => {
  const theme = useTheme()
  const [anchorEl, setAnchorEl] = useState(null)

  const handleClick = event => {
    setAnchorEl(event.currentTarget)
  }

  const handleClose = () => {
    setAnchorEl(null)
  }

  const open = Boolean(anchorEl)


  // ** Props
  const {
    sx,
    stats,
    title,
    chipIcon,
    subtitle,
    tooltipText,
    avatarIcon,
    avatarSize = 30,
    iconSize = '1rem',
    chipColor = '#7367F0',
    avatarColor = 'primary'
  } = props

  const currentYear = new Date().getFullYear()

  return (
    <Card
      sx={{
        ...sx,
        borderBottom: `2px solid ${chipColor}`,
        transition: 'background-color 0.4s', // Smooth transition effect
        '&:hover': {
          borderBottom: `5px solid ${chipColor}`
        }
      }}
    >
      <CardContent sx={{ display: 'flex', flexDirection: 'column', alignItems: 'space-between', padding: '0.5rem' }}>
        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', gap: 2 }}>
          <Typography variant='body2' sx={{ fontWeight: 'bold' }}>
            {title}
          </Typography>
          <Icon
            icon='tabler:exclamation-circle'
            aria-describedby={title}
            color='#E64449'
            fontSize={24}
            onClick={event => handleClick(event)} // Pass index to identify which item is clicked
            style={{ cursor: 'pointer' }}
          />
          <Popover
            id={title}
            open={open} // Use popoverOpen to control the individual popover state
            anchorEl={anchorEl}
            onClose={handleClose}
            anchorOrigin={{
              vertical: 'top',
              horizontal: 'right'
            }}
          >
            <Typography sx={{ p: 2, width: '250px', maxHeight: '350px', fontSize: '0.7rem', textAlign: 'justify' }}>
              {tooltipText}
            </Typography>
          </Popover>
        </Box>
        <Typography variant='body2' sx={{ mb: 0.5, fontSize: 'x-large' }}>
          {stats}
        </Typography>
        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%', gap: 2 }}>
          <Typography variant='body2' sx={{ fontSize: '0.85rem' }}>
            {subtitle} vs {currentYear - 1}
          </Typography>
          <Icon icon={chipIcon} color={subtitle === `Increasing ` ? '#24B364' : '#E64449'} fontSize={25} />
        </Box>
      </CardContent>
    </Card>
  )
}

const FinancialYearCard = () => (
  <Grid container spacing={6}>
    {data.map((item, index) => {
      return (
        <Grid item key={index} xs={12} sm={6} md={4} lg={6}>
          <TechCard {...item} />
        </Grid>
      )
    })}
  </Grid>
)

export default FinancialYearCard
